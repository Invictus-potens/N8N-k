version: '3.8'

services:
  n8n:
    build: .
    container_name: n8n
    restart: unless-stopped
    ports:
      - "5678:5678"
    environment:
      # Configurações básicas
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=admin
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      
      # Configurações de banco de dados (SQLite por padrão)
      - DB_TYPE=sqlite
      - DB_SQLITE_DATABASE=/home/node/.n8n/database.sqlite
      
      # Configurações de execução
      - N8N_USER_MANAGEMENT_DISABLED=false
      - N8N_TEMPLATES_ENABLED=true
      - N8N_ONBOARDING_FLOW_DISABLED=true
      - NODE_ENV=production
      
      # Configurações de webhook
      - WEBHOOK_URL=http://localhost:5678/
      
      # Configurações de execução de workflows
      - EXECUTIONS_PROCESS=main
      - EXECUTIONS_MODE=regular
      
      # Configurações de logs
      - LOG_LEVEL=info
      
      # Configurações de segurança
      - GENERIC_TIMEZONE=UTC
      
    volumes:
      - n8n_data:/home/node/.n8n
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - n8n_network

  # Opcional: PostgreSQL para produção
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: n8n_postgres
  #   restart: unless-stopped
  #   environment:
  #     - POSTGRES_DB=n8n
  #     - POSTGRES_USER=n8n
  #     - POSTGRES_PASSWORD=n8n_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - n8n_network

volumes:
  n8n_data:
    driver: local
  # postgres_data:
  #   driver: local

networks:
  n8n_network:
    driver: bridge
